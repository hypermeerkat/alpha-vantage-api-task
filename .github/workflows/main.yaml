name: CI/CD Pipeline

# Define when this workflow should run
on:
  push:
    branches: [ main ]  # Trigger on pushes to the main branch
  pull_request:
    branches: [ main ]  # Trigger on pull requests to the main branch

jobs:
  # First job: Run tests
  test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    steps:
    - uses: actions/checkout@v2  # Check out the repository code
    - name: Set up Python
      uses: actions/setup-python@v2  # Set up Python environment
      with:
        python-version: '3.9'  # Specify Python version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Upgrade pip
        pip install -r requirements.txt  # Install project dependencies
    - name: Run tests
      run: pytest  # Run pytest to execute tests

  # Second job: Build and deploy
  build-and-deploy:
    needs: test  # This job runs only if the test job succeeds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2  # Check out the repository code

    - name: 'Login to Azure'
      uses: azure/login@v1  # Authenticate with Azure
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  # Use stored Azure credentials

    # Build and push backend Docker image
    - name: 'Build and push backend image'
      uses: azure/docker-login@v1  # Log in to Azure Container Registry
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build ./alpha-vantage-task-backend -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}

    # Build and push frontend Docker image
    - name: 'Build and push frontend image'
      uses: azure/docker-login@v1  # Log in to Azure Container Registry again
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build ./alpha-vantage-task-frontend -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}

    # Deploy backend to Azure Web App
    - name: 'Deploy to Azure Web App for Backend'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'alpha-vantage-task-backend'
        images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}'

    # Deploy frontend to Azure Web App
    - name: 'Deploy to Azure Web App for Frontend'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'alpha-vantage-task-frontend'
        images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}'